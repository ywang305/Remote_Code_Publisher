<!-------------------------------------------------------------------------
ActionsAndRules.cpp
Published:  Tue Nov 28 23:09:32 2017
  Yaodong Wang, CSE687 - Object Oriented Design, Spring 2017

	Note:
		-Markup characters in the text part, enclosed in <pre>...< / pre> have to be
			replaced with escape sequences, e.g., < becomes &lt; and > becomes &gt;
		-Be careful that you don't replace genuine markup characters with escape 
			sequences, e.g., everything outside of the <pre>...< / pre> section.
  ----------------------------------------------------------------------------->
<!DOCTYPE html>
<html>

<head>
  <title>Code Publisher</title>
  <link rel="stylesheet" type="text/css" href="style/site.css">
  <script src="js/myScript.js"></script>
</head>

<body>

<header>ActionsAndRules.cpp</header>

<nav>
  Dependencies:
  <a href="Parser.h.htm">Parser.h</a>
  <a href="ConfigureParser.h.htm">ConfigureParser.h</a>
  <a href="ActionsAndRules.h.htm">ActionsAndRules.h</a>
</nav>

<aside>

	<ul>
		<li><a href="#" onclick="Toggle('Parser.cpp')">Parser.cpp</a>
			<ul id="Parser.cpp" class="c0">
				<li><a href="#" onclick="Toggle('Demo')">Demo</a>
					<ul id="Demo" class="c1">
					</ul>
				</li>
				<li><a href="#" onclick="Toggle('[])')">[])</a>
					<ul id="[])" class="c1">
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('ActionsAndRules.h')">ActionsAndRules.h</a>
			<ul id="ActionsAndRules.h" class="c0">
				<li><a href="#" onclick="Toggle('CodeAnalysis')">CodeAnalysis</a>
					<ul id="CodeAnalysis" class="c1">
						<li><a href="#" onclick="Toggle('Language')">Language</a>
						<ul id="Language" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Path')">Path</a>
						<ul id="Path" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Repository')">Repository</a>
						<ul id="Repository" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('~Repository')">~Repository</a>
						<ul id="~Repository" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('language')">language</a>
						<ul id="language" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('package')">package</a>
						<ul id="package" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('currentPath')">currentPath</a>
						<ul id="currentPath" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('currentAccess')">currentAccess</a>
						<ul id="currentAccess" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('getInstance')">getInstance</a>
						<ul id="getInstance" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('scopeStack')">scopeStack</a>
						<ul id="scopeStack" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('AST')">AST</a>
						<ul id="AST" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('getGlobalScope')">getGlobalScope</a>
						<ul id="getGlobalScope" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Toker')">Toker</a>
						<ul id="Toker" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('lineCount')">lineCount</a>
						<ul id="lineCount" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('BeginScope')">BeginScope</a>
						<ul id="BeginScope" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleBeginScope')">HandleBeginScope</a>
						<ul id="HandleBeginScope" class="c2">
							<li><a href="#">HandleBeginScope</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('EndScope')">EndScope</a>
						<ul id="EndScope" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Dbug')">Dbug</a>
						<ul id="Dbug" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleEndScope')">HandleEndScope</a>
						<ul id="HandleEndScope" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('doAction')">doAction</a>
						<ul id="doAction" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('DetectAccessSpecifier')">DetectAccessSpecifier</a>
						<ul id="DetectAccessSpecifier" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleAccessSpecifier')">HandleAccessSpecifier</a>
						<ul id="HandleAccessSpecifier" class="c2">
							<li><a href="#">HandleAccessSpecifier</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('PreprocStatement')">PreprocStatement</a>
						<ul id="PreprocStatement" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandlePreprocStatement')">HandlePreprocStatement</a>
						<ul id="HandlePreprocStatement" class="c2">
							<li><a href="#">HandlePreprocStatement</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('NamespaceDefinition')">NamespaceDefinition</a>
						<ul id="NamespaceDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleNamespaceDefinition')">HandleNamespaceDefinition</a>
						<ul id="HandleNamespaceDefinition" class="c2">
							<li><a href="#">HandleNamespaceDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('ClassDefinition')">ClassDefinition</a>
						<ul id="ClassDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleClassDefinition')">HandleClassDefinition</a>
						<ul id="HandleClassDefinition" class="c2">
							<li><a href="#">HandleClassDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('StructDefinition')">StructDefinition</a>
						<ul id="StructDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleStructDefinition')">HandleStructDefinition</a>
						<ul id="HandleStructDefinition" class="c2">
							<li><a href="#">HandleStructDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('EnumDefinition')">EnumDefinition</a>
						<ul id="EnumDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleEnumDefinition')">HandleEnumDefinition</a>
						<ul id="HandleEnumDefinition" class="c2">
							<li><a href="#">HandleEnumDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('CppFunctionDefinition')">CppFunctionDefinition</a>
						<ul id="CppFunctionDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleCppFunctionDefinition')">HandleCppFunctionDefinition</a>
						<ul id="HandleCppFunctionDefinition" class="c2">
							<li><a href="#">HandleCppFunctionDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('CSharpFunctionDefinition')">CSharpFunctionDefinition</a>
						<ul id="CSharpFunctionDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleCSharpFunctionDefinition')">HandleCSharpFunctionDefinition</a>
						<ul id="HandleCSharpFunctionDefinition" class="c2">
							<li><a href="#">HandleCSharpFunctionDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('ControlDefinition')">ControlDefinition</a>
						<ul id="ControlDefinition" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleControlDefinition')">HandleControlDefinition</a>
						<ul id="HandleControlDefinition" class="c2">
							<li><a href="#">HandleControlDefinition</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Rslt')">Rslt</a>
						<ul id="Rslt" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('PrintFunction')">PrintFunction</a>
						<ul id="PrintFunction" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('PrettyPrintFunction')">PrettyPrintFunction</a>
						<ul id="PrettyPrintFunction" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('CppDeclaration')">CppDeclaration</a>
						<ul id="CppDeclaration" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleCppDeclaration')">HandleCppDeclaration</a>
						<ul id="HandleCppDeclaration" class="c2">
							<li><a href="#">HandleCppDeclaration</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('CSharpDeclaration')">CSharpDeclaration</a>
						<ul id="CSharpDeclaration" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleCSharpDeclaration')">HandleCSharpDeclaration</a>
						<ul id="HandleCSharpDeclaration" class="c2">
							<li><a href="#">HandleCSharpDeclaration</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('CppExecutable')">CppExecutable</a>
						<ul id="CppExecutable" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleCppExecutable')">HandleCppExecutable</a>
						<ul id="HandleCppExecutable" class="c2">
							<li><a href="#">HandleCppExecutable</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('CSharpExecutable')">CSharpExecutable</a>
						<ul id="CSharpExecutable" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleCSharpExecutable')">HandleCSharpExecutable</a>
						<ul id="HandleCSharpExecutable" class="c2">
							<li><a href="#">HandleCSharpExecutable</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Default')">Default</a>
						<ul id="Default" class="c2">
							<li><a href="#">doTest</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('HandleDefault')">HandleDefault</a>
						<ul id="HandleDefault" class="c2">
							<li><a href="#">HandleDefault</a></li>
							<li><a href="#">doAction</a></li>
						</ul>
					</li>
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Child.h')">Child.h</a>
			<ul id="Child.h" class="c0">
				<li><a href="#" onclick="Toggle('ChildTest')">ChildTest</a>
					<ul id="ChildTest" class="c1">
						<li><a href="#" onclick="Toggle('element')">element</a>
						<ul id="element" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Numbers')">Numbers</a>
						<ul id="Numbers" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Child')">Child</a>
						<ul id="Child" class="c2">
							<li><a href="#">Child</a></li>
							<li><a href="#">~Child</a></li>
							<li><a href="#">inlineMethod</a></li>
							<li><a href="#">method2</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('globalFunction')">globalFunction</a>
						<ul id="globalFunction" class="c2">
						</ul>
					</li>
					</ul>
				</li>
				<li><a href="#" onclick="Toggle('globalFunction1')">globalFunction1</a>
					<ul id="globalFunction1" class="c1">
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Child2.h')">Child2.h</a>
			<ul id="Child2.h" class="c0">
				<li><a href="#" onclick="Toggle('ChildTest2')">ChildTest2</a>
					<ul id="ChildTest2" class="c1">
						<li><a href="#" onclick="Toggle('Child')">Child</a>
						<ul id="Child" class="c2">
						</ul>
					</li>
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Child.cpp')">Child.cpp</a>
			<ul id="Child.cpp" class="c0">
				<li><a href="#" onclick="Toggle('method1')">method1</a>
					<ul id="method1" class="c1">
					</ul>
				</li>
				<li><a href="#" onclick="Toggle('method3')">method3</a>
					<ul id="method3" class="c1">
					</ul>
				</li>
				<li><a href="#" onclick="Toggle('method4')">method4</a>
					<ul id="method4" class="c1">
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('ConfigureParser.h')">ConfigureParser.h</a>
			<ul id="ConfigureParser.h" class="c0">
				<li><a href="#" onclick="Toggle('CodeAnalysis')">CodeAnalysis</a>
					<ul id="CodeAnalysis" class="c1">
						<li><a href="#" onclick="Toggle('ConfigParseForCodeAnal')">ConfigParseForCodeAnal</a>
						<ul id="ConfigParseForCodeAnal" class="c2">
							<li><a href="#">ConfigParseForCodeAnal</a></li>
						</ul>
					</li>
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('ConfigureParser.cpp')">ConfigureParser.cpp</a>
			<ul id="ConfigureParser.cpp" class="c0">
				<li><a href="#" onclick="Toggle('[])')">[])</a>
					<ul id="[])" class="c1">
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Grandparent.h')">Grandparent.h</a>
			<ul id="Grandparent.h" class="c0">
				<li><a href="#" onclick="Toggle('GrandParent')">GrandParent</a>
					<ul id="GrandParent" class="c1">
						<li><a href="#" onclick="Toggle('GrandParent')">GrandParent</a>
						<ul id="GrandParent" class="c2">
							<li><a href="#">GrandParent</a></li>
							<li><a href="#">~GrandParent</a></li>
							<li><a href="#">GPmethod2</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('~GrandParent')">~GrandParent</a>
						<ul id="~GrandParent" class="c2">
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('GPmethod2')">GPmethod2</a>
						<ul id="GPmethod2" class="c2">
						</ul>
					</li>
					</ul>
				</li>
				<li><a href="#" onclick="Toggle('globalFunction2')">globalFunction2</a>
					<ul id="globalFunction2" class="c1">
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Test.cpp')">Test.cpp</a>
			<ul id="Test.cpp" class="c0">
				<li><a href="#" onclick="Toggle('GPmethod3')">GPmethod3</a>
					<ul id="GPmethod3" class="c1">
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Parent.h')">Parent.h</a>
			<ul id="Parent.h" class="c0">
				<li><a href="#" onclick="Toggle('parent1')">parent1</a>
					<ul id="parent1" class="c1">
						<li><a href="#" onclick="Toggle('parent2')">parent2</a>
						<ul id="parent2" class="c2">
							<li><a href="#">Parent</a></li>
						</ul>
					</li>
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('Parser.h')">Parser.h</a>
			<ul id="Parser.h" class="c0">
				<li><a href="#" onclick="Toggle('CodeAnalysis')">CodeAnalysis</a>
					<ul id="CodeAnalysis" class="c1">
						<li><a href="#" onclick="Toggle('IBuilder')">IBuilder</a>
						<ul id="IBuilder" class="c2">
							<li><a href="#">~IBuilder</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('IAction')">IAction</a>
						<ul id="IAction" class="c2">
							<li><a href="#">~IAction</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('IRule')">IRule</a>
						<ul id="IRule" class="c2">
							<li><a href="#">~IRule</a></li>
						</ul>
					</li>
						<li><a href="#" onclick="Toggle('Parser')">Parser</a>
						<ul id="Parser" class="c2">
							<li><a href="#">Parser</a></li>
							<li><a href="#">~Parser</a></li>
						</ul>
					</li>
					</ul>
				</li>
			</ul>
		</li>
		<li><a href="#" onclick="Toggle('ActionsAndRules.cpp')">ActionsAndRules.cpp</a>
			<ul id="ActionsAndRules.cpp" class="c0">
				<li><a href="#" onclick="Toggle('[])')">[])</a>
					<ul id="[])" class="c1">
					</ul>
				</li>
			</ul>
		</li>
	</ul>

</aside>

<pre>
/////////////////////////////////////////////////////////////////////
//  ActionsAndRules.cpp - implements new parsing rules and actions //
//  ver 3.2                                                        //
//  Language:      Visual C++ 2008, SP1                            //
//  Platform:      Dell Precision T7400, Vista Ultimate SP1        //
//  Application:   Prototype for CSE687 Pr1, Sp09                  //
//  Author:        Jim Fawcett, CST 4-187, Syracuse University     //
//                 (315) 443-3948, jfawcett@twcny.rr.com           //
/////////////////////////////////////////////////////////////////////

#include "ActionsAndRules.h"
#include "../Utilities/Utilities.h"

using namespace CodeAnalysis;

Repository* Repository::instance;

#ifdef TEST_ACTIONSANDRULES

#include &lt;iostream&gt;
#include "ActionsAndRules.h"
#include "Tokenizer.h"
#include "SemiExpression.h"

int main(int argc, char* argv[])
{
  std::cout &lt;&lt; "\n  Testing ActionsAndRules class\n "
            &lt;&lt; std::string(30,'=') &lt;&lt; std::endl;

  try
  {
    Utilities::StringHelpers::Title(
      "Actions and Rules - these construction tests are no longer valid"
    );
    //PreprocStatement pps;
    //pps.addAction(&ppq);

    //FunctionDefinition fnd;
    //PrettyPrintToQ pprtQ(resultsQ);
    //fnd.addAction(&pprtQ);

    //Toker toker("../ActionsAndRules.h");
    //SemiExp se(&toker);
    //Parser parser(&se);
    //parser.addRule(&pps);
    //parser.addRule(&fnd);
    //while(se.get())
    //  parser.parse();
    //size_t len = resultsQ.size();
    //for(size_t i=0; i&lt;len; ++i)
    //{
    //  std::cout &lt;&lt; "\n  " &lt;&lt; resultsQ.front().c_str();
    //  resultsQ.pop();
    //}
    std::cout &lt;&lt; "\n\n";
  }
  catch(std::exception& ex)
  {
    std::cout &lt;&lt; "\n\n  " &lt;&lt; ex.what() &lt;&lt; "\n\n";
  }
}
#endif

</pre>

</body>

</html>
